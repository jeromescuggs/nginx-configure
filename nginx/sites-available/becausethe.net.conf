log_format  main_ext  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      '"$host" sn="$server_name" '
                      'rt=$request_time '
                      'ua="$upstream_addr" us="$upstream_status" '
                      'ut="$upstream_response_time" ul="$upstream_response_length" '
                      'cs=$upstream_cache_status' ;

# Expires map
map $sent_http_content_type $expires {
    default                    off;
    text/html                  epoch;
    text/css                   max;
    application/javascript     max;
    ~image/                    max;
    font/woff                  max;
    font/woff2                 max;
    font/ttf                   max;
}

server {
    listen                  443 ssl http2;
    listen                  [::]:443 ssl http2;
    server_name             becausethe.net www.becausethe.net;
    set                     $base /var/www/becausethe.net;
    root                    $base/public_html;

    # SSL
    ssl_certificate /etc/letsencrypt/live/becausethe.net/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/becausethe.net/privkey.pem; # managed by Certbot
    ssl_trusted_certificate /etc/letsencrypt/live/becausethe.net/chain.pem;

	# browser caching
    expires $expires;

    # security
    include                 nginxconfig.io/security.conf;

    # logging
    access_log              /var/log/nginx/becausethe.net.access.log main_ext;
    error_log               /var/log/nginx/becausethe.net.error.log warn;

    # index.php
    index                   index.php index.html index.js;

    # additional config
    include nginxconfig.io/general.conf;


    # index.php fallback
    # location / {
       # try_files $uri $uri/ /index.php?$query_string;
    # }

    # handle .php
    # location ~ \.php$ {
        # include nginxconfig.io/php_fastcgi.conf;
    #}
        # pass PHP scripts to FastCGI server
       location ~ [^/]\.php(/|$) {
                # include snippets/fastcgi-php.conf;
                include nginxconfig.io/php_fastcgi.conf;
                # With php-fpm (or other unix sockets):
                # fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
        #       # With php-cgi (or other tcp sockets):
        #       fastcgi_pass 127.0.0.1:9000;
        }
# =========================================
# config for mecha CMS 
# not required for anything else, but
# an example of the fine-tuning nginx allows
# =========================================
                # location ^~ /engine {
        # deny all;
        # return 404;
        # }

        # location ~ /lot/x/.*/lot/asset {allow all; }
        # location ^~ /lot {
                # deny all;
                # return 404;
        # }

        # location ^~ /lot/asset {allow all; }
        # location ^~ /lot/layout/asset { allow all; }
# =======================================
# url rewrite rules and fastcgi (lol)
# =======================================
        location / {
            try_files $uri $uri/ @rewrite;
        }
        # pass PHP scripts to FastCGI server

        location @rewrite {
                rewrite ^/(.*)$ /index.php?_=$1 last;
        }



}

# non-www, subdomains redirect
server {
    listen                  443 ssl http2;
    listen                  [::]:443 ssl http2;
    server_name             becausethe.net www.becausethe.net;

    # SSL
    ssl_certificate         /etc/letsencrypt/live/becausethe.net/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/becausethe.net/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/becausethe.net/chain.pem;
    return                  301 https://www.becausethe.net$request_uri;
}

# HTTP redirect
server {
    listen      80;
    listen      [::]:80;
    server_name becausethe.net www.becausethe.net;
    include     nginxconfig.io/letsencrypt.conf;

    location / {
        return 301 https://becausethe.net$request_uri;
    }
}
